In addition to implementing the device code, answer the following questions:
1)  If you run the program like this:
   ./greyscalar -bw 16 -bh 16 file.ppm
   how many data elements are calculated by a single internal block? 


2)  If you run the program like this:
   ./greyscalar -bw 8 -bh 16 file.ppm
   how many data elements are calculated by a single internal block? 

3) Suppose the size of the image is 1000 by 2000 (width by height) and the
size of the created blocks are 16 by 16.  How many blocks are launched?

4) Suppose the size of the image is 1000 by 2000 (width by height) and the
size of the created blocks are 16 by 16.

a. How many threads are launched?

b. How many of those threads will have no work to do?

5) Recall that the GPU on our Cuda server has 20 Streaming Multiprocessors. Each
Streaming Multiprocessor can handle a maximum of 32 blocks and
2048 threads. The maximum number of threads in a block is 1024.
What is a problem with having blocks of size 4 by 8?   

6) Compile the code with the optimization flags turned on and run the
dotests.sh script. You should see from the results that blocks of size 32 by 32
provide better performance than blocks of size 8 by 8.  Why?



